//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "progress")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub book_id: i32,
    pub current_chapter: i32,
    pub chapter_progress: i32,
    pub book_progress: i32,
    pub currently_reading: bool,
    pub status: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::audiobook::Entity",
        from = "Column::BookId",
        to = "super::audiobook::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Audiobook,
}

impl Related<super::audiobook::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Audiobook.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
